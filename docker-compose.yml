services:
  # Node.js build stage
  frontend-builder:
    image: node:22-alpine
    container_name: frontend-builder
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules  # 匿名ボリュームでnode_modulesをコンテナ内に保持
    command: >
      sh -c "
        npm install &&
        npm run build
      "
    networks:
      - app-network

  # Nginx production stage
  frontend:
    image: nginx:alpine
    container_name: frontend-app
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      frontend-builder:
        condition: service_completed_successfully
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge